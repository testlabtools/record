name: CI

on:
  pull_request:
  push:
    branches: [main]
    tags:
      - "*"

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  ci:
    name: 'CI'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install deps
        run: make deps -j4

      - name: Build
        run: make build

      - name: Test (JUnit)
        run: make test-junit

      - name: Link binary
        run: ln -s ./dist/main ./record

      - name: Test action (record)
        uses: ./
        with:
          junit-paths: reports/
          continue-on-error: false
        env:
          TESTLAB_GROUP: unit
          TESTLAB_KEY: ${{ secrets.TESTLAB_KEY }}

      - name: Link binary
        run: ln -s ./dist/main ./record

      - name: Test action (predict)
        uses: testlabtools/predict@main
        with:
          runner: go-test
          list-command: go test -list="." ./...
          continue-on-error: false
        env:
          TESTLAB_GROUP: unit
          TESTLAB_KEY: ${{ secrets.TESTLAB_KEY }}

      - name: Test predicted
        run: |
          cat /tmp/testlab-predicted.txt
          # shellcheck disable=SC2046
          go test -run $(cat /tmp/testlab-predicted.txt)

      - name: Test GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/') == false
        with:
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/')
        with:
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
