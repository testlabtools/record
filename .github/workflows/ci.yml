name: CI

on:
  pull_request:
  push:
    branches: [main]

    # Tags do not use the github cache.
    tags:
      - "*" # zizmor: ignore[cache-poisoning]

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  ci:
    name: 'CI'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: false

      # Github cache is disabled for tags to avoid cache poisoning.
      - uses: actions/cache@v4
        if: github.ref_type != 'tag'
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install deps
        run: make deps -j4

      - name: Build
        run: make build lint -j4

      - name: Test (JUnit)
        run: make test-junit

      - name: Link binary
        run: ln -s ./dist/main ./record

      - name: Test action (record)
        uses: ./
        with:
          junit-paths: reports/
          continue-on-error: false
        env:
          TESTLAB_GROUP: unit
          TESTLAB_KEY: ${{ secrets.TESTLAB_KEY }}

      - name: Link binary
        run: ln -s ./dist/main ./record

      - name: Test action (predict)
        uses: testlabtools/predict@main
        with:
          runner: go-test
          list-command: go test -list="." ./...
          continue-on-error: false
        env:
          TESTLAB_GROUP: unit
          TESTLAB_KEY: ${{ secrets.TESTLAB_KEY }}

      - name: Test predicted
        run: |
          cat /tmp/testlab-predicted.txt
          go test -run "$(cat /tmp/testlab-predicted.txt)"

      - name: Test GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/') == false
        with:
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/')
        with:
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
